body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
/*
This is just the initial styling. We need to change this to match what we're looking for in the final production version.
 */
.pages {
  font-size: 0vh;
  margin: 70px;
  padding: 0px;
  border-radius: 5px;
  box-shadow: 3px 3px 15px #65404ff7;
  display: inline-block;
}

.flex {
  display: flex;
  top: 75%;
  justify-content: center;
}

.h1 {
  text-align: center;
  margin: 50px;
  padding: 0px;
  border-radius: 5px;
}

.p {
  text-align: center;
}



.secondary {
  border-radius: 50%;
  text-align: center;
  box-shadow:0 0 15px 4px rgba(0,0,0,0.06);
  width: 50px;
  height: 50px;
}

.addButton {

  margin-left: 3em;
  margin-top: -20px;

}

.top5 { margin-top:5px; }
.top7 { margin-top:7px; }
.top10 { margin-top:10px; }
.top15 { margin-top:15px; }
.top17 { margin-top:17px; }
.top30 { margin-top:30px; }
.mr7 {margin-right: 7px}
.mrt4{margin-top: 4em}

.form-background{ background: rgb(28,17,176);
  background: fixed;
  height: 100vh;
  width: 100vw}
.form-background{ background: linear-gradient(124deg, rgba(28,17,176,1) 0%, rgba(165,83,117,1) 50%, rgba(199,66,148,1) 100%);}

.back-color {
  background: #f5f6f7
;
}



input[type=text] {
  padding:10px;
  border:0;
  box-shadow:0 0 15px 4px rgba(0,0,0,0.06);
  border-radius: 30px;
}

.btn1-primary,

.btn1-primary:active,
.btn1-primary:visited,
.btn1-primary:focus {
  background-color: #1477ef !important;
  border-color: #44249f !important;
}
.btn1-primary:hover{
  background-color: #291958 !important;
}

.btn1 {
  border: 0;
  box-shadow: 0px 6px 15px 2px rgb(70 37 159) !important;
  border-radius: 30px !important;
  padding: 10px;
  color: #dbdbdb;
}

.btnLight{
  box-shadow: 6px 3px 15px 4px rgba(0,0,0,.06) !important;
  border-radius: 0px 30px 30px 0px !important;
  border-color: #ffffff00;
}

.btn1[type = submit] {
  border-radius: 30px !important;
  padding: 0.675rem 0.75rem !important;
}

.secondary-color {
  background-color: #edecef !important;
}

.round-custom {
  border-radius: 30px;
}


/* Styles for hiding the native checkbox */
input[type='checkbox'].check-custom {
  position: absolute;
  overflow: hidden;
  opacity: 0;
  z-index: 1;
  margin-top: .45em;
  margin-left: .5em;
}



/* Styles for the basic appearance of the toggle switch */
input[type='checkbox'].check-custom.toggle-switch ~ .check-toggle {
  width: 1.5rem;
  height: 1rem;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
}

/* Common styles for the ::before and ::after pseudo-elements of the toggle switch */
input[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::before,
input[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::after {
  content: '';
  top: 0;
  left: 0;
  position: absolute;
}

/* Styles for the ::before pseudo-element (the outer frame) of the toggle switch */
input[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::before {
  width: 100%;
  height: 100%;
  border-radius: 0.5rem;
  background: #dbdbdb;
}

/* Styles for the ::after pseudo-element (the inner slider) of the toggle switch */
input[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::after {
  width: 0.75rem;
  height: 0.75rem;
  margin: 0.125rem;
  border-radius: 50%;
  background: #ffffff;
}

/* Styles for the ::before pseudo-element of the toggle switch in hover state */
input[type='checkbox'].check-custom.toggle-switch:hover ~ .check-toggle::before {
  background: #c4c4c4;
}

/* Styles for the ::before pseudo-element of the toggle switch in focus state */
input[type='checkbox'].check-custom.toggle-switch:focus ~ .check-toggle::before {
  box-shadow: 0 0 0 2px rgba(23, 133, 255, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in both focus and checked or enabled state */
input[type='checkbox'].check-custom.toggle-switch:focus:checked ~ .check-toggle::before {
  box-shadow: 0 0 0 2px rgba(97, 191, 158, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom.toggle-switch:checked ~ .check-toggle::before {
  background: #61bf9e;
}

/* Styles for the ::after pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom.toggle-switch:checked ~ .check-toggle::after {
  left: auto;
  right: 0;
}

/* Styles for hiding the native checkbox */
input[type='checkbox'].check-custom2 {
  position: absolute;
  overflow: hidden;
  opacity: 0;
  z-index: 1;
  margin-top: .45em;
  margin-left: 12em;
  /* float: right; */

}



/* Styles for the basic appearance of the toggle switch */
input[type='checkbox'].check-custom2.toggle-switch2 ~ .check-toggle2 {
  width: 1.5rem;
  height: 1.0rem;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
}

/* Common styles for the ::before and ::after pseudo-elements of the toggle switch */
input[type='checkbox'].check-custom2.toggle-switch2 ~ .check-toggle2::before,
input[type='checkbox'].check-custom2.toggle-switch2 ~ .check-toggle2::after {
  content: '';
  top: 0;
  left: 0;
  position: absolute;
}

/* Styles for the ::before pseudo-element (the outer frame) of the toggle switch */
input[type='checkbox'].check-custom2.toggle-switch2 ~ .check-toggle2::before {
  width: 100%;
  height: 100%;
  border-radius: 0.5rem;
  background: #dbdbdb;
}

/* Styles for the ::after pseudo-element (the inner slider) of the toggle switch */
input[type='checkbox'].check-custom2.toggle-switch2 ~ .check-toggle2::after {
  width: 0.75rem;
  height: 0.75rem;
  margin: 0.125rem;
  border-radius: 50%;
  background: #ffffff;
}

/* Styles for the ::before pseudo-element of the toggle switch in hover state */
input[type='checkbox'].check-custom2.toggle-switch2:hover ~ .check-toggle2::before {
  background: #c4c4c4;
}

/* Styles for the ::before pseudo-element of the toggle switch in focus state */
input[type='checkbox'].check-custom2.toggle-switch2:focus ~ .check-toggle2::before {
  box-shadow: 0 0 0 2px rgba(23, 133, 255, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in both focus and checked or enabled state */
input[type='checkbox'].check-custom2.toggle-switch2:focus:checked ~ .check-toggle2::before {
  box-shadow: 0 0 0 2px rgba(97, 191, 158, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom2.toggle-switch2:checked ~ .check-toggle2::before {
  background: #61bf9e;
}

/* Styles for the ::after pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom2.toggle-switch2:checked ~ .check-toggle2::after {
  left: auto;
  right: 0;
}


input[type='checkbox'].check-custom3 {
  position: absolute;
  overflow: hidden;
  opacity: 0;
  z-index: 1;
  margin-top: .55em;
  margin-left: 6.5em;
}

/* Styles for the basic appearance of the toggle switch */
input[type='checkbox'].check-custom3.toggle-switch3 ~ .check-toggle3 {
  width: 1.5rem;
  height: 1.0rem;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
}

/* Common styles for the ::before and ::after pseudo-elements of the toggle switch */
input[type='checkbox'].check-custom3.toggle-switch3~ .check-toggle3::before,
input[type='checkbox'].check-custom3.toggle-switch3 ~ .check-toggle3::after {
  content: '';
  top: 0;
  left: 0;
  position: absolute;
}

/* Styles for the ::before pseudo-element (the outer frame) of the toggle switch */
input[type='checkbox'].check-custom3.toggle-switch3 ~ .check-toggle3::before {
  width: 100%;
  height: 100%;
  border-radius: 0.5rem;
  background: #dbdbdb;
}

/* Styles for the ::after pseudo-element (the inner slider) of the toggle switch */
input[type='checkbox'].check-custom3.toggle-switch3 ~ .check-toggle3::after {
  width: 0.75rem;
  height: 0.75rem;
  margin: 0.125rem;
  border-radius: 50%;
  background: #ffffff;
}

/* Styles for the ::before pseudo-element of the toggle switch in hover state */
input[type='checkbox'].check-custom3.toggle-switch3:hover ~ .check-toggle3::before {
  background: #c4c4c4;
}

/* Styles for the ::before pseudo-element of the toggle switch in focus state */
input[type='checkbox'].check-custom3.toggle-switch2:focus ~ .check-toggle3::before {
  box-shadow: 0 0 0 2px rgba(23, 133, 255, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in both focus and checked or enabled state */
input[type='checkbox'].check-custom3.toggle-switch3:focus:checked ~ .check-toggle3::before {
  box-shadow: 0 0 0 2px rgba(97, 191, 158, 0.5);
}

/* Styles for the ::before pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom3.toggle-switch3:checked ~ .check-toggle3::before {
  background: #61bf9e;
}

/* Styles for the ::after pseudo-element of the toggle switch in checked or enabled state */
input[type='checkbox'].check-custom3.toggle-switch3:checked ~ .check-toggle3::after {
  left: auto;
  right: 0;
}

